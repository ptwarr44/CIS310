-- Patrick Warren
-- A9
-- CIS310-01
-- Due 11/15/2017

--MAKE SURE THAT INVOICE TOTAL VALUE IS CORRECT BEFORE RUNNING TRIGGER.
--THIS RESETS INV_TOTAL BACK TO THE VALUES ADDED IN LGLINE FOR THE TOTAL
UPDATE	LGINVOICE
SET		INV_TOTAL = (SELECT SUM(LINE_QTY*LINE_PRICE) FROM LGLINE)

DECLARE @INV_NUM CHAR(4)
DECLARE @INV_TOTAL MONEY

IF(EXISTS (SELECT * FROM LGLINE))
BEGIN
	DECLARE INSERTED_CURSOR CURSOR FOR
	SELECT	LI.INV_NUM, SUM(LL.LINE_QTY*LL.LINE_PRICE) AS INV_TOTAL
	FROM	LGLINE LL INNER JOIN LGINVOICE LI ON LI.INV_NUM = LL.INV_NUM
	GROUP BY	LI.INV_NUM

	OPEN INSERTED_CURSOR
	FETCH NEXT FROM INSERTED_CURSOR
	INTO @INV_NUM, @INV_TOTAL

	WHILE(@@FETCH_STATUS = 0)
	BEGIN
		UPDATE	LGINVOICE
		SET		INV_TOTAL = @INV_TOTAL
		WHERE	INV_NUM = @INV_NUM
		FETCH	NEXT FROM INSERTED_CURSOR
				INTO @INV_NUM, @INV_TOTAL

	END
	CLOSE INSERTED_CURSOR
	DEALLOCATE INSERTED_CURSOR
END

--START OF TRIGGER
ALTER TRIGGER A9
	ON LGLINE
	AFTER INSERT, DELETE, UPDATE
AS
BEGIN

	DECLARE @INV_NUM CHAR(4)
	DECLARE @TOTAL MONEY

	--LOGIC TO HANDLES RECORDS IN INSERTED
	IF(EXISTS (SELECT * FROM INSERTED) AND NOT EXISTS(SELECT * FROM DELETED))
	BEGIN
		
		DECLARE INSERTED_CURSOR CURSOR FOR
		SELECT	INV_NUM, SUM(LINE_QTY*LINE_PRICE) AS TOTAL
		FROM	INSERTED
		GROUP BY INV_NUM, LINE_QTY

		OPEN	INSERTED_CURSOR
		FETCH	NEXT FROM INSERTED_CURSOR
				INTO @INV_NUM, @TOTAL
		WHILE(@@FETCH_STATUS = 0)
		BEGIN
			UPDATE	LGINVOICE
			SET		INV_TOTAL = INV_TOTAL + @TOTAL
			WHERE	INV_NUM = @INV_NUM
			
			FETCH	NEXT FROM INSERTED_CURSOR
					INTO @INV_NUM, @TOTAL
		END
		CLOSE	INSERTED_CURSOR
		DEALLOCATE INSERTED_CURSOR
	END

	--LOGIC TO HANDLE RECORDS IN DELETED
	IF(EXISTS (SELECT * FROM DELETED) AND NOT EXISTS (SELECT * FROM INSERTED))
	BEGIN
		
		DECLARE	DELETED_CURSOR CURSOR FOR
		SELECT	INV_NUM, SUM(LINE_QTY*LINE_PRICE) AS TOTAL
		FROM	DELETED 
		GROUP BY INV_NUM, LINE_QTY

		OPEN	DELETED_CURSOR
		FETCH	NEXT FROM DELETED_CURSOR
				INTO @INV_NUM, @TOTAL
		WHILE(@@FETCH_STATUS = 0)
		BEGIN
			UPDATE	LGINVOICE
			SET		INV_TOTAL = INV_TOTAL - @TOTAL
			WHERE	INV_NUM = @INV_NUM
			FETCH	NEXT FROM DELETED_CURSOR
					INTO @INV_NUM, @TOTAL
		END
		CLOSE	DELETED_CURSOR
		DEALLOCATE DELETED_CURSOR
	END

	--LOGIC FOR UPDATED. LOOKS AT BOTH INSERTED AND DELETED TABLES FOR CHANGES
	IF(EXISTS (SELECT * FROM INSERTED) AND EXISTS(SELECT * FROM DELETED))
	BEGIN
		DECLARE UPDATED_CURSOR CURSOR FOR
		SELECT	I.INV_NUM, SUM((D.LINE_QTY*D.LINE_PRICE) - (I.LINE_QTY * I.LINE_PRICE)) AS INV_TOTAL
		FROM	INSERTED I INNER JOIN DELETED D ON I.INV_NUM = D.INV_NUM
		GROUP BY	I.INV_NUM

		OPEN UPDATED_CURSOR
		FETCH	NEXT FROM UPDATED_CURSOR
				INTO @INV_NUM, @TOTAL

		WHILE(@@FETCH_STATUS = 0)
		BEGIN
			UPDATE	LGINVOICE
			SET		INV_TOTAL = INV_TOTAL - @TOTAL
			WHERE	INV_NUM = @INV_NUM
			FETCH	NEXT FROM UPDATED_CURSOR
					INTO @INV_NUM, @TOTAL

	END
	CLOSE UPDATED_CURSOR
	DEALLOCATE UPDATED_CURSOR
	END
END
GO





--TESTS!!!
--Main query to see if INV_TOTAL is updated
SELECT *
FROM LGINVOICE
ORDER BY INV_NUM

--Show important line items from LGLINE. TOTAL should match LGINVOICE from above
SELECT INV_NUM, LINE_NUM, LINE_QTY, LINE_PRICE, sum(LINE_QTY*LINE_PRICE) AS TOTAL
FROM	LGLINE
GROUP BY INV_NUM, LINE_NUM, LINE_QTY, LINE_PRICE
ORDER BY INV_NUM

--Adds two pieces where the price is $7.49 and invoice is 104
UPDATE	LGLINE
SET		LINE_QTY = LINE_QTY + 2
WHERE	LINE_PRICE = '7.49' AND
		INV_NUM = 104

--Removes two items where INV_NUM = 106
UPDATE	LGLINE
SET		LINE_QTY = LINE_QTY - 1
WHERE	INV_NUM = 106

--Adds two items from all line items in invoice 105
UPDATE	LGLINE
SET		LINE_QTY = LINE_QTY + 2
WHERE	INV_NUM = 105

--Adds 10 '3274-XJX' to invoice 104. 
INSERT INTO LGLINE
VALUES (104, 8, '3274-XJX', 10, 3.99)

--Removes 10 '3274-XJX' from invoice 104. 
DELETE FROM LGLINE
WHERE INV_NUM = 104 AND PROD_SKU = '3274-XJX'